<Window x:Class="WpfApplication2.Task"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"   
        xmlns:col="clr-namespace:System.Collections;assembly=mscorlib"
        Title="Tâche" Height="600" Width="650" Icon="Images/notebook.ico" SizeToContent="Height"
        Closing="Window_Closing">

    <Grid Name="TaskGrid" Margin="3" Grid.IsSharedSizeScope="True">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="Auto" SharedSizeGroup="Buttons"></ColumnDefinition>
            <ColumnDefinition Width="Auto" SharedSizeGroup="Buttons"></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <ScrollViewer Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" VerticalScrollBarVisibility="Auto">
            <Grid Margin="3">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition Height="auto"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <Label Grid.Row="0" Grid.Column="0">Nom:</Label>
                <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding Path=name, UpdateSourceTrigger=PropertyChanged}"></TextBox>

                <Label Grid.Row="1" Grid.Column="0">Échéance:</Label>
                <Grid Grid.Row="1" Grid.Column="1" Grid.IsSharedSizeScope="True">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="2*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition SharedSizeGroup="RadioButtons"></RowDefinition>
                        <RowDefinition SharedSizeGroup="RadioButtons"></RowDefinition>
                        <RowDefinition SharedSizeGroup="RadioButtons"></RowDefinition>
                    </Grid.RowDefinitions>
                    <RadioButton Grid.Row="0" Grid.Column="0" IsChecked="True" Checked="RadioButton_Checked">Aucune</RadioButton>
                    <RadioButton Name="DeadlineIsEventRadioButton" Grid.Row="1" Grid.Column="0" Checked="RadioButton_Checked">Événement</RadioButton>
                    <ComboBox Name="EventsComboBox" Grid.Row="1" Grid.Column="1" SelectedValuePath="ID" DisplayMemberPath="name" IsEnabled="{Binding ElementName=DeadlineIsEventRadioButton, Path=IsChecked}" SelectionChanged="EventsComboBox_SelectionChanged"></ComboBox>
                    <RadioButton Name="DeadlineIsSelectedDateRadioButton" Grid.Row="2" Grid.Column="0" Checked="RadioButton_Checked">Date précise</RadioButton>
                    <DatePicker Name="DeadlineDatePicker" Grid.Row="2" Grid.Column="1" IsEnabled="{Binding ElementName=DeadlineIsSelectedDateRadioButton, Path=IsChecked}" SelectedDateChanged="DeadlineDatePicker_SelectedDateChanged"></DatePicker>
                </Grid>

                <Label Grid.Row="2" Grid.Column="0"><Hyperlink Click="PriorityHyperlink_Click">Priorité:</Hyperlink></Label>
                <ComboBox Name="PriorityComboBox" Grid.Row="2" Grid.Column="1" SelectedValue="{Binding Path=priority_id}" SelectedValuePath="ID" DisplayMemberPath="name"></ComboBox>

                <Label Grid.Row="3" Grid.Column="0">Complétion:</Label>
                <TextBox Grid.Row="3" Grid.Column="1" Text="{Binding Path=completion, UpdateSourceTrigger=PropertyChanged}"></TextBox>

                <Label Grid.Row="4" Grid.Column="0">Tags:</Label>
                <TextBox Name="TagsTextBox" Grid.Row="4" Grid.Column="1" TextChanged="TagsTextBox_TextChanged"></TextBox>

                <Label Grid.Row="5" Grid.Column="0">Description:</Label>
                <TextBox Grid.Row="5" Grid.Column="1" AcceptsReturn="True" MinLines="5" TextWrapping="Wrap" Text="{Binding Path=description, UpdateSourceTrigger=PropertyChanged}"></TextBox>

                <Expander Grid.Row="6" Grid.ColumnSpan="2" Header="Alertes" IsExpanded="True">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="5"/>
                        </Grid.RowDefinitions>
                        <DataGrid Name="AlertsDataGrid" MinHeight="100" AutoGenerateColumns="False" SelectionMode="Single">
                            <DataGrid.Resources>
                                <ContextMenu x:Key="DataRowContextMenu">
                                    <MenuItem Header="Supprimer" Click="DeleteAlertMenuItem_Click"></MenuItem>
                                </ContextMenu>
                                <col:ArrayList x:Key="ActionList">
                                    <col:DictionaryEntry Key="1" Value="Afficher un rappel"></col:DictionaryEntry>
                                    <col:DictionaryEntry Key="2" Value="Envoyer un courriel"></col:DictionaryEntry>
                                </col:ArrayList>
                                <col:ArrayList x:Key="WhenSpecifierList">
                                    <col:DictionaryEntry Key="1" Value="Minutes"></col:DictionaryEntry>
                                    <col:DictionaryEntry Key="2" Value="Heures"></col:DictionaryEntry>
                                    <col:DictionaryEntry Key="3" Value="Jours"></col:DictionaryEntry>
                                    <col:DictionaryEntry Key="4" Value="Semaines"></col:DictionaryEntry>
                                </col:ArrayList>
                            </DataGrid.Resources>
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="ID" Width="Auto" Binding="{Binding Path=ID}" Visibility="Hidden" IsReadOnly="True"></DataGridTextColumn>
                                <DataGridTextColumn Header="Tâche parent" Width="Auto" Binding="{Binding Path=task_id}" Visibility="Hidden" IsReadOnly="True"></DataGridTextColumn>
                                <DataGridComboBoxColumn Header="Action" Width="Auto" SelectedValueBinding="{Binding Path=action}" ItemsSource="{StaticResource ActionList}" DisplayMemberPath="Value" SelectedValuePath="Key"></DataGridComboBoxColumn>
                                <DataGridTextColumn Header="Quand" Width="Auto" Binding="{Binding Path=when_value}"></DataGridTextColumn>
                                <DataGridComboBoxColumn Header="Unité" Width="Auto" SelectedValueBinding="{Binding Path=when_specifier}" ItemsSource="{StaticResource WhenSpecifierList}" DisplayMemberPath="Value" SelectedValuePath="Key"></DataGridComboBoxColumn>
                            </DataGrid.Columns>
                            <DataGrid.RowStyle>
                                <Style TargetType="DataGridRow">
                                    <Setter Property="ContextMenu" Value="{StaticResource DataRowContextMenu}"></Setter>
                                </Style>
                            </DataGrid.RowStyle>
                        </DataGrid>
                        <GridSplitter Grid.Row="1" Height="25" ResizeDirection="Rows" HorizontalAlignment="Stretch" ResizeBehavior="PreviousAndCurrent"></GridSplitter>
                    </Grid>
                </Expander>
                <Expander Grid.Row="7" Grid.ColumnSpan="2" Header="Sous-tâches" IsExpanded="True">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="5"/>
                        </Grid.RowDefinitions>
                        <DataGrid Name="SubTasksDataGrid" MinHeight="100" AutoGenerateColumns="False" SelectionMode="Single">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="ID" Width="Auto" Binding="{Binding Path=ID}" Visibility="Hidden" IsReadOnly="True"></DataGridTextColumn>
                                <DataGridTextColumn Header="Tâche parent" Width="Auto" Binding="{Binding Path=child_of}" Visibility="Hidden" IsReadOnly="True"></DataGridTextColumn>
                                <DataGridTextColumn Header="Nom" Width="*" Binding="{Binding Path=name}"></DataGridTextColumn>
                            </DataGrid.Columns>
                            <DataGrid.Resources>
                                <ContextMenu x:Key="DataRowContextMenu">
                                    <MenuItem Header="Supprimer" Click="DeleteSubTaskMenuItem_Click"></MenuItem>
                                </ContextMenu>
                            </DataGrid.Resources>
                            <DataGrid.RowStyle>
                                <Style TargetType="DataGridRow">
                                    <Setter Property="ContextMenu" Value="{StaticResource DataRowContextMenu}"></Setter>
                                    <EventSetter Event="MouseDoubleClick" Handler="SubTasksDataGrid_MouseDoubleClick"></EventSetter>
                                </Style>
                            </DataGrid.RowStyle>
                        </DataGrid>
                        <GridSplitter Grid.Row="1" Height="25" ResizeDirection="Rows" HorizontalAlignment="Stretch" ResizeBehavior="PreviousAndCurrent"></GridSplitter>
                    </Grid>
                </Expander>
            </Grid>
        </ScrollViewer>

        <Button Grid.Row="1" Grid.Column="1" Padding="2" Margin="3" IsDefault="True" Click="SaveButton_Click" IsEnabled="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=IsDirty}">Enregistrer</Button>
        <Button Grid.Row="2" Grid.Column="2" Padding="2" Margin="3" IsCancel="True" Click="CloseButton_Click">Fermer</Button>
    </Grid>
</Window>